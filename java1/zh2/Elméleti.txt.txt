E1. Hogyan tud egy Java program kommunik√°lni egy m√°sik g√©pen fut√≥ programmal?
Tud ugyan√∫gy is, mint b√°rmelyik m√°sik program: egy standard protokollon kereszt√ºl: pl. HTTP, TCP, stb. P√©ld√°ul a kliens egy HTTP GET request-et k√ºld egy m√°sik g√©pen fut√≥, nem felt√©tlen√ºl Java-ban meg√≠rt programnak.
L√©tezik JVM-JVM k√∂zti kommunik√°ci√≥ is, RPC, Java-ban RNI. Itt a .class fileokat mindk√©t JVM-nek el kell √©rnie (pl SAMBA megoszt√°s). Ezut√°n a Serializable interface-t implement√°l√≥ oszt√°lyok bytestream-√© serializ√°lt √°llapotban √°etk√ºld√©sre ker√ºlnek a t√°voli JVM-ra, ahol a sz√°m√≠√°sok elv√©g√©zse ut√°n az eredm√©ny szint√©n serializ√°lva visszaker√ºl a client JVM-re.


E2. Mi a k√ºl√∂nbs√©g az ‚Äûoverriding‚Äù √©s ‚Äûoverloading‚Äù k√∂z√∂tt? Melyiket mire haszn√°ljuk?
Overriding: √ñr√∂kl≈ëd√©sn√°l (extends) haszn√°ljuk, hogy az anyaoszt√°ly egy met√≥dus√°t fel√ºl√≠rjuk.
Overloading: Ha kett≈ë (vagy t√∂bb) f√ºggv√©nynek ugyanaz a neve egy oszt√°lyon bel√ºl, de m√°sok a param√©terei, akkor a Java (vagy m√°s nyelv is) meg tudja k√ºl√∂nb√∂ztetni a k√©t f√ºgv√©nyt egym√°st√≥l, a param√©terek t√≠pusait felhazsn√°lva.
Pl.
void add(int a, int b)
void add(float a, float b)
lehetnek egy oszt√°lyon bel√ºl, √©s megh√≠v√°skor a param√©tereknek megfelel≈ë fog lefutni.


E3. Mire szolg√°l a referenciav√°ltoz√≥ a Java nyelvben? Milyen m≈±veletek √©rtelmezettek rajta?
Ez volt az el≈ëz≈ë ZH-ban is............ üò†
Singeletonokn√°l gyaakori p√©ld√°ul a haszn√°lata. A referenciav√°ltoz√≥ egy instance-t (p√©ld√°nyt) t√°rol az adott oszt√°lyr√≥l.
pl.
class Alma() {
    private static Alma inst; // Ez a referencia v√°ltoz√≥
    public void getAlma() {
        return inst;
    }
}
Ha egy oszt√°lyb√≥l nem akarunk t√∂bb p√©ld√°nyt haszn√°lni, akkor a singleton megold√°s hasznos. Pl. egy j√°t√©kszervern√©l egyetlen Server objektum van, ami minden adatot t√°rol. √âs b√°rhol a k√≥dban ha a Server objektumot akarjuk haszn√°lni, akkor mindig ugyanaz az Server objektum kell.
P√©ld√°ul: https://github.com/GeyserMC/Floodgate (igen, fejb≈ël tudom a repo URL-j√©t... nincs netem :/ ) projekben ilyen a FloodgateApi.getInstance(), amibe≈ël az eg√©sz szerveren egyetlen p√©ld√°ny l√©tezik, √©s az kezeli az √∂sszes objektumot.
